@page "/Report"
@using System.Net
@using CovidTracker.Code
@using CovidTracker.Code.Database;
@using CovidTracker.Code.IO;
@using Microsoft.AspNetCore.Identity
@using CovidTracker.Code.Database;
@inject NavigationManager Navigator
@inject Blazored.LocalStorage.ILocalStorageService localStorage

<h1>PROTOTYPE - NOT FINAL</h1>

<!-- This is the people searching form. -->
<h2>Search People</h2>
<p>Name</p>
<input @bind="@peopleName" />
<p>Phone Number</p>
<input @bind="@peopePhoneNo" />
<br />
<button @onclick="@SearchPeople">Search</button>

<!-- This is a table of users which is returned from the people searching form.
     Loops through the users and renders a table row for each. -->
<table>
    @foreach (User user in searchUsers) {
    <tr>
        <th>@user.UserID</th>
        <th>@user.Name</th>
        <th>@user.AddressLine1</th>
        <th>@user.AddressLine2</th>
        <th>@user.Suburb</th>
        <th>@user.Postcode</th>
        <th>@user.PhoneNo</th>
        <button @onclick="() => TrackUser(user)">Track</button>
    </tr>
    }
</table>

<h2>Generate Report:</h2>
<p>Before</p>
<input type="date" @bind="@reportBeforeDate"/>
<input type="time" @bind="@reportBeforeTime"/>
<p>After</p>
<input type="date" @bind="@reportAfterDate"/>
<input type="time" @bind="@reportAfterTime"/>
<p>Depth</p>
<input type="number" @bind="@reportNumber" />
<h3>Persons included</h3>
<ul>
    @foreach (User user in usersToTrack) {
        <li>ID: @user.UserID (@user.Name).</li>
    }
</ul>

@if(generatedReport.Count > 0) {
    <h2>Report:</h2>
    @foreach(User user in generatedReport) { 
        <p>@user.Name</p>
    }
}
<h2>Report:</h2>

<button @onclick="Submit">Generate</button>

@code 
{ 
    public string peopleName;
    public string peopePhoneNo;

    public DateTime reportBeforeDate;
    public DateTime reportBeforeTime;
    public DateTime reportAfterDate;
    public DateTime reportAfterTime;
    public int reportNumber;

    public List<User> searchUsers = new List<User>();

    public List<User> usersToTrack = new List<User>();

    public List<User> generatedReport = new List<User>();

    public async void SearchPeople()
    {
        searchUsers.Clear();
        IOReturn<List<User>> user = await DatabaseHelper.SearchUsers(peopleName, peopePhoneNo);
        searchUsers = user.Value;
    }

    public void TrackUser(User user)
    {
        if (!usersToTrack.Contains(user)) {
            usersToTrack.Add(user);
        }
    }

    public async void Submit()
    {
        generatedReport.Clear();

        DateTime before = new DateTime(reportBeforeDate.Year, reportBeforeDate.Month, reportBeforeDate.Day, reportBeforeTime.Hour, reportBeforeTime.Minute, reportBeforeTime.Second);
        DateTime after = new DateTime(reportAfterDate.Year, reportAfterDate.Month, reportAfterDate.Day, reportAfterTime.Hour, reportAfterTime.Minute, reportAfterTime.Second);
        IOReturn<List<User>> ret = await DatabaseHelper.GenerateReport(usersToTrack, reportNumber, before, after);
        generatedReport = ret.Value;
    }
}
