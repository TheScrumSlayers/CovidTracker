@page "/Report"
@using System.Net
@using CovidTracker.Code
@using CovidTracker.Code.Database;
@using CovidTracker.Code.IO;  
@using Microsoft.AspNetCore.Identity
@using CovidTracker.Code.Database;
@inject NavigationManager Navigator
@inject Blazored.LocalStorage.ILocalStorageService localStorage

<h1>PROTOTYPE - NOT FINAL</h1>

<!-- This is the people searching form. -->
<h2>Search People</h2>
<p>Name</p>
<input @bind="@peopleName" />
<p>Phone Number</p>
<input @bind="@peopePhoneNo" /><br />
<button @onclick="@SearchPeople">Search</button>

<!-- This is a table of users which is returned from the people searching form. 
     Loops through the users and renders a table row for each. -->
<table>
    @foreach (User user in searchUsers)
    {
    <tr>
        <th>@user.UserID</th>
        <th>@user.Name</th>
        <th>@user.AddressLine1</th>
        <th>@user.AddressLine2</th>
        <th>@user.Suburb</th>
        <th>@user.Postcode</th>
        <th>@user.PhoneNo</th>
        <button @onclick="() => TrackUser(user)">Track</button>
    </tr>
    }
</table>

<!-- This is the signin searching form. -->
<h2>Search Signins</h2>
<p>Person ID</p>
<input @bind="@signinUserID" />
<p>Address Line 1</p>
<input @bind="@signinAddressLine1" />
<p>Address Line 1</p>
<input @bind="@signinAddressLine2" /><br />
<button @onclick="@SearchSignins">Search</button>
<table>
    @foreach (Signin signin in searchSignins) {
    <tr>
        <th>@signin.SigninID</th>
        <th>@signin.UserID</th>
        <th>@signin.Time</th>
        <th>@signin.AddressLine1</th>
        <th>@signin.AddressLine2</th>
        <th>@signin.Suburb</th>
        <th>@signin.Postcode</th>
        <th>@signin.PhoneNo</th>
        <button @onclick="() => TrackLocation(signin)">Track</button>
    </tr>
     }
</table>

<h2>What to find:</h2>
<ul>
@foreach(User user in usersToTrack) {
    <li>Locations where ID: @user.UserID (@user.Name) visited.</li>
}
</ul>

<ul>
@foreach (Signin signin in signinLocationsToTrack) {
    <li>People who visited ID: @signin.SigninID (@signin.AddressLine1, @signin.AddressLine2).</li>
}
</ul>

<button @onclick="Submit">Generate Report</button>

@code { 
    public string peopleName;
    public string peopePhoneNo;

    public string signinUserID;
    public string signinAddressLine1;
    public string signinAddressLine2;

    public List<User> searchUsers = new List<User>();
    public List<Signin> searchSignins = new List<Signin>();

    public List<User> usersToTrack = new List<User>();
    public List<Signin> signinLocationsToTrack = new List<Signin>();

    public async void SearchPeople()
    {
        searchUsers.Clear();
        IOReturn<List<User>> user = await DatabaseHelper.SearchUsers(peopleName, peopePhoneNo);
        searchUsers = user.Value;
    }

    public async void SearchSignins()
    {
        searchSignins.Clear();
        IOReturn<List<Signin>> signin = await DatabaseHelper.SearchSignins(signinUserID, signinAddressLine1, signinAddressLine2);
        searchSignins = signin.Value;
    }

    public void TrackUser(User user)
    {
        if (!usersToTrack.Contains(user)) {
            usersToTrack.Add(user);
        }
    }

    public void TrackLocation(Signin signin)
    {
        if (!signinLocationsToTrack.Contains(signin)) {
            
            // Do not track duplicate locations.
            foreach(Signin s in signinLocationsToTrack) {
                if(s.AddressLine1 == signin.AddressLine1 &&
                    s.AddressLine2 == signin.AddressLine2 &&
                    s.Suburb == signin.Suburb &&
                    s.Postcode == signin.Postcode) {
                        return;
                }
            }

            signinLocationsToTrack.Add(signin);
        }
    }

    public void Submit()
    {

    }
}
